{"name":"TrebleClef Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.qlWQgUbpzjSX5ZnG"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `TrebleClef Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}TrebleClef_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/TrebleClef_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"1dOiOdKHcNjJpG1u"}
{"name":"Sharp Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.1ZkS9Ja2kyo3w8jy"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Sharp Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Sharp_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Sharp_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"6Xj7dowpgGNgjMum"}
{"name":"Quaver Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.MMjFabcbegujP3u5"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Quaver Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Quaver_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Quaver_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"6qepkOehhMX8Udja"}
{"name":"BeamedQuavers Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.6PmRgmlNvtAYYrgq"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Beamed Quavers Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BeamedQuavers_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BeamedQuavers_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"GmaDNc4LrSGg9sxb"}
{"name":"Sharp Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.lbUU2LFIdf1CAHET"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Sharp Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Sharp_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Sharp_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"I6NBOQ0uumxzNoZH"}
{"name":"Flat Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.UTLn2173nrABW9RF"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Flat Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Flat_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Flat_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"Jo9TUT8xASFqQHzm"}
{"name":"Sharp Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.5R0FZA4q1jaX6Chg"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Sharp Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Sharp_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Sharp_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"Mmi1Pa0m80OULlfD"}
{"name":"TrebleClef Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.v579C2pZfeI6QLpG"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `TrebleClef Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}TrebleClef_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/TrebleClef_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"N6pgRkuyxpzxxvZH"}
{"name":"Flat Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.JxQzxh2CZB3716aM"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Flat Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Flat_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Flat_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"PxrT8ZqnkFzDO3yE"}
{"name":"Crotchet Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.70zhjZRIjZd6tzRT"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Crotchet Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Crotchet_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Crotchet_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"QSkJqfe0mdSWsDHJ"}
{"name":"TrebleClef Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.uwjIP7w6V74Ui5Fs"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `TrebleClef Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}TrebleClef_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/TrebleClef_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"QkeIIok5jdmNDZmw"}
{"name":"Crotchet Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.nkBOIBtLxeyaY8Qk"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Crotchet Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Crotchet_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Crotchet_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"ReG16XLFujqBbohf"}
{"name":"TrebleClef Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.eWtGx18FPHpxIKic"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `TrebleClef Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}TrebleClef_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/TrebleClef_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"Wicb1CUgaCzGBE9g"}
{"name":"Quaver Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.nR6bmWsc2faKlG5X"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Quaver Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Quaver_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Quaver_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"WqhzCxrfgc4JoMBB"}
{"name":"BassClef Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.0cRC3lHxgoZSO1b4"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `BassClef Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BassClef_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BassClef_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"XNAGQtYFQe5u3Po2"}
{"name":"Crotchet Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.v22royxw6TX4LhuT"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Crotchet Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Crotchet_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Crotchet_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"XQF9i2IoxBQsFAp5"}
{"name":"BassClef Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.nXiwlc6OPoYukzjF"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `BassClef Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BassClef_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BassClef_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"XWU57oWY3TMJ4ByT"}
{"name":"BeamedQuavers Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.g6mndfhtyVpRjbXW"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Beamed Quavers Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BeamedQuavers_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BeamedQuavers_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"ZGCoDR3Sayzrl7ng"}
{"name":"Flat Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.z8EkjTSx9ft4Pm6x"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Flat Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Flat_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Flat_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"ZWDR4JwlpJIdAXBD"}
{"name":"Sharp Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.x4pvuvY4rcQeGANa"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Sharp Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Sharp_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Sharp_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"Zk9VIiUJFQHLm9pu"}
{"name":"BassClef Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.3kYQaVzxjAwomXGg"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `BassClef Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BassClef_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BassClef_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"bNI2v0ekPG02giDR"}
{"name":"BassClef Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.VNZB4RlyPhkPdo2g"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `BassClef Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BassClef_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BassClef_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"frUqDXrwWscYlPuA"}
{"name":"BeamedQuavers Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.bA5x2rFiFF2Lh5x9"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Beamed Quavers Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BeamedQuavers_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BeamedQuavers_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"jZWx30rFojHyBX4O"}
{"name":"Flat Green","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.tvnYwL3rb61F7IF4"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Flat Green`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Flat_01_Regular_Green_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Flat_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"nnJCCZcWnydElwcA"}
{"name":"Crotchet Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.hGGcuQNQq3NwaCTM"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Crotchet Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Crotchet_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Crotchet_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"ojV26BGJetR6uI5z"}
{"name":"Quaver Orange","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.Sf5NOe5umrnodVy6"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Quaver Orange`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Quaver_01_Regular_Orange_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Quaver_01_Regular_Orange_Thumb.webp","actorIds":[],"_id":"rotiTP6fn56WVVNk"}
{"name":"BeamedQuavers Purple","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.5Q03GRfpBabuPyB2"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Beamed Quavers Purple`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}BeamedQuavers_01_Regular_Purple_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/BeamedQuavers_01_Regular_Purple_Thumb.webp","actorIds":[],"_id":"u1D8ghCQjxOE8Vr0"}
{"name":"Quaver Blue","permission":{"default":0,"I78VA6a780HpLHg7":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.HwYJV0rxQtBqnImO"}},"scope":"global","command":"//These lines starting with a \"//\" are comments that are ignored when executing the macro.\n//First, we define a few things : The name of the Journal Entry this macro is going to populate with a new image\nconst journalName = \"PlayerEntry\";\n//plateName is the name of the actor(pressure plate idea) that the player is going to step upon.\nconst plateName = `Quaver Blue`;\n//folder 01 is the directory path to the animation triggered by this macro\nlet folder01 = \"modules/jb2a_patreon/Library/Generic/Music_Notation/\";\n//anFile is the name of the animation we're using\nlet anFile = `${folder01}Quaver_01_Regular_Blue_200x200.webm`;\n\n///Check if Module dependencies are installed or returns an error to the user\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n//Here we prepare a function with all the information it needs to play the animation, calling upon FXMaster\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n//The animation will be coming from the plate, our \"mainTarget\", we say, find the token with the name \"plateName\" that we defined\n//at the beginning of the macro\nlet mainTarget = canvas.tokens.placeables.find(i=> i.name === plateName);\n//The scale will be proportional to the size of the mainTarget\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 1\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\nawait wait (75);\n//Here, I'm using the path of the asset and removing the text I don't need to replace it with the path of the thumbnail\n//that we're going to display in the Journal Entry\nvar path = spellAnim.file.substr(52);\nvar thumb = path.slice(0, -12) + \"Thumb.webp\";\nvar webP = `${folder01}` + `${thumb}`;\nvar imgWidth = \"100\";\n//Class=\"secret means that this text/image will be only visible to the GM\"\nconst content = `<img src = \"${webP}\" width = \"${imgWidth}\" /> `;\nconst journal = game.journal.getName(journalName);\n//Here, we add text to the Journal Entry\n//journal.data.content is what's already in the Journal Entry and we add what we defined just above as \"content\"\njournal.update({content: journal.data.content + content});\n}\n//Last step now that the function is ready, has all the parameters...execute the function\nCast ();","author":"I78VA6a780HpLHg7","img":"modules/jb2a_patreon/Library/Generic/Music_Notation/Quaver_01_Regular_Blue_Thumb.webp","actorIds":[],"_id":"zpamyeWuxgaMpicJ"}
